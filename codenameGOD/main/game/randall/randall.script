local STATE = {
	LYING_DOWN=1,
	SHOELESS=2,
	ONE_SHOE=3,
	NORMAL=4
}

local ACTION = {
	IDLE=1,
	TALK=2,
	WALK=3,
	WALK_TALK=4,
	SLEEP=5,
	OTHER=6
}

local DIRECTION = {
	RIGHT=1,
	LEFT=2
}

local get_direction_text = function(direction)
	if direction == DIRECTION.RIGHT then
		return "_right"
	else
		return "_left"
	end
end

local default_on_message = function(mapping, self, message_id, message, sender)
	local direction = get_direction_text(self.direction)
	
	if message_id == hash("start_talking") then
		if self.action == ACTION.MOVE then
			self.action = ACTION.WALK_TALK
			self.new_animation = hash(mapping.walk_talk..direction)
		else
			self.action = ACTION.TALK
			self.new_animation = hash(mapping.talk)
		end
	end
	if message_id == hash("stop_talking") and (self.action == ACTION.TALK or self.action == ACTION.WALK_TALK) then
		self.action = ACTION.IDLE
		self.new_animation = hash(mapping.idle)
	end
	if message_id == hash("go_to") then
		if message.pos == go.get_position() then
			return
		end
		if self.action == ACTION.TALK then
			self.action = ACTION.WALK_TALK
		else
			self.action = ACTION.WALK
		end

		self.direction = DIRECTION.LEFT
		if message.pos.x > go.get_position().x then
			self.direction = DIRECTION.RIGHT
		end

		direction = get_direction_text(self.direction)
		if self.action == ACTION.WALK_TALK then
			self.new_animation = hash(mapping.walk_talk..direction)
		else
			self.new_animation = hash(mapping.walk..direction)
		end
		go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, message.pos, go.EASING_LINEAR, message.duration, 0, function()
			if self.action == ACTION.WALK then
				self.action = ACTION.IDLE
				self.new_animation = hash(mapping.idle)
			elseif self.action == ACTION.WALK_TALK then
				self.action = ACTION.TALK
				self.new_animation = hash(mapping.talk)
			end
		end)
	end
	if message_id == hash("set_animation") then
		self.action = ACTION.OTHER
		self.new_animation = hash(message.animation)
	end
end

local state_on_message = {
	[STATE.LYING_DOWN] = function(self, message_id, message, sender)

	end,
	[STATE.SHOELESS] = function(self, message_id, message, sender)
		local anims_mapping = {}
		default_on_message(anims_mapping, self, message_id, message, sender)
	end,
	[STATE.ONE_SHOE] = function(self, message_id, message, sender)
		local anims_mapping = {}
		default_on_message(anims_mapping, self, message_id, message, sender)
	end,
	[STATE.NORMAL] = function(self, message_id, message, sender)
		local anims_mapping = {
			idle="idle",
			walk="walking",
			talk="talking",
			walk_talk="walk_talk"
		}
		default_on_message(anims_mapping, self, message_id, message, sender)
	end,
}

function init(self)
	msg.post(".", "acquire_input_focus")
	self.current_animation = hash("idle")
	self.new_animation = hash("idle")
	self.state = STATE.NORMAL
	self.action = ACTION.IDLE
	self.direction = nil
end

function update(self, dt)
	if self.new_animation ~= self.current_animation then
		msg.post("#sprite", "play_animation", {id = self.new_animation})
		self.current_animation = self.new_animation
	end
end

function on_message(self, message_id, message, sender)
	state_on_message[self.state](self, message_id, message, sender)
end

function on_input(self, action_id, action)
end
