--[[
    TODO: Think how to put a chat balloon where there is no character
    TODO: Think about the position of a chat balloon in specific animations positions
    TODO: Should we change the balloon to the bigger one when a line goes over the limit? Or if the balloon would fill completely?
    TODO: Should something be done when a character with a balloon moves?
]]

local utils = require("main.game.dialogue.utils")
local get_visible_text = utils.get_visible_text

local ORIENTATION = {UP=1, DOWN=-1, LEFT=-1, RIGHT=1}
local BALLOONS = {
	[1]={
		width=476,
		height=176,
		image="balloon1",
		label_size=vmath.vector3(430, 100, 0),
		offset=vmath.vector3(-50, 0, 0)
	},
	[2]={
		width=296,
		height=128,
		image="balloon2",
		label_size=vmath.vector3(256, 64, 0),
		offset=vmath.vector3(0, 0, 0)
	}
}

local function get_balloon_to_use(text)
	local max_length = 0
	for line in text:gmatch("[^\n]+") do
		max_length = math.max(max_length, line:len())
	end

	if max_length >= 30 then
		return 1
	else
		return 2
	end
end

function init(self)
	self.label = msg.url("#label")
	self.balloon_text = nil
	self.show_elapsed = 0
	self.last_message_id = 0

	msg.post(".", "disable")
end

function update(self, dt)
	if self.balloon_text then
		self.show_elapsed = self.show_elapsed + dt
		local visible_text = get_visible_text(self.balloon_text, self.show_elapsed)
		label.set_text(self.label, visible_text)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("show_text") and message.character then
		self.last_message_id = self.last_message_id + 1
		local message_id = self.last_message_id

		local pos = go.get_position(message.character)
		local balloon_id = get_balloon_to_use(message.text)
		local balloon = BALLOONS[balloon_id]

		local offset_x = balloon.width / 2 + balloon.offset.x
		local offset_y = balloon.height / 2 + balloon.offset.y
		
		local w, h = window.get_size()
		local h_orientation = ORIENTATION.RIGHT
		if pos.x + offset_x + balloon.width >= w then
			h_orientation = ORIENTATION.LEFT
		end
		sprite.set_hflip("#sprite", h_orientation == ORIENTATION.LEFT)

		local v_orientation = ORIENTATION.UP
		if pos.y + offset_y + balloon.height >= h then
			v_orientation = ORIENTATION.DOWN
		end
		sprite.set_vflip("#sprite", v_orientation == ORIENTATION.DOWN)
		
		pos.x = pos.x + (offset_x * h_orientation)
		pos.y = pos.y + (offset_y * v_orientation)
		pos.z = 1
		
		go.set_position(pos, ".")
		go.set(self.label, "size", balloon.label_size)
		msg.post("#sprite", "play_animation", {id = hash(balloon.image)})

		self.balloon_text = message.text
		self.show_elapsed = 0

		label.set_text(self.label, "")
		msg.post(".", "enable")

		timer.delay(message.delay or 4, false, function(self, id)
			if message_id == self.last_message_id then
				self.balloon_text = nil
				label.set_text(self.label, "")
				msg.post(".", "disable")
			end
		end)
	end
end
