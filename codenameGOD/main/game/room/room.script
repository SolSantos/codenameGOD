local goput = require "main.clickinput"
local gamestate = 0
local update_time = 0
local item_table = {
	{210,200},
	{220,260},
	{450,300},
	{800,280},
	{840,280},
	{600,200},
	{800,200}
}

local interactable_table = {
	{900,250},
	{680,280},
	{300,280},
	{300,180},
	{800,280}
}

function update(self, dt)
	update_time = update_time + 1
	if update_time == 1000 then
		update_time = 0
		msg.post(".", "idle")
	end
end

local function handle_click(url, action_id, action, gameobject)

	local it_id = 0

	if action.released then
		if gameobject == "petrock" then
			it_id = 1
		elseif gameobject == "coins" then
			it_id = 2
		elseif gameobject == "ticket" then
			it_id = 3
		elseif gameobject == "shoe1" then
			it_id = 4
		elseif gameobject == "shoe2" then
			it_id = 5
		end

		update_time = 0
		msg.post("gui#room_dialogue", "show_int_text", {number=it_id})
			local randall_behavior = timer.delay(3, false, function(self, id)
			go.animate("randall", "position.x", go.PLAYBACK_ONCE_FORWARD, interactable_table[it_id][1], go.EASING_LINEAR, 1.2)
			go.animate("randall", "position.y", go.PLAYBACK_ONCE_FORWARD, interactable_table[it_id][2], go.EASING_LINEAR, 1.2)
			local randall_behavior = timer.delay(1, false, function(self, id)
				msg.post("randall#sprite", "play_animation", {id = hash("idle")})	
			end)
			
			go.animate(url, "position.y", go.PLAYBACK_ONCE_FORWARD, -50, go.EASING_LINEAR, 1)
			go.animate(url, "position.x", go.PLAYBACK_ONCE_FORWARD, 300, go.EASING_LINEAR, 1)
		end)
	end
end

function init(self)

	goput.add("petrock#sprite", nil, handle_click, "petrock")
	goput.add("ticket#sprite", nil, handle_click, "ticket")
	goput.add("shoe1#sprite", nil, handle_click, "shoe1")
	goput.add("shoe2#sprite", nil, handle_click, "shoe2")
	goput.add("coins#sprite", nil, handle_click, "coins")
	msg.post(".", "run_sequence_1")
end

function on_input(self, action_id, action)
	gamestate = 0 
	return goput.on_input(action_id, action, gameobject)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("run_sequence_1") then		
		local pos = vmath.vector3(0,-20,0)
		local rot = vmath.quat_rotation_z(90)
		go.animate("randall", "rotation.z", go.PLAYBACK_ONCE_FORWARD, 0, go.EASING_LINEAR, 1)
		go.animate("randall", "position.y", go.PLAYBACK_ONCE_FORWARD, 300, go.EASING_LINEAR, 1)
		go.animate("randall", "position.x", go.PLAYBACK_ONCE_FORWARD, 520, go.EASING_LINEAR, 1)
		timer.delay(2, false, function(self, id)
			msg.post(".", "acquire_input_focus")
			msg.post(".", "non_idle")
		end)
	elseif message_id == hash("idle") then
		math.randomseed(os.time())
		math.random(); math.random(); math.random()
		local r = math.random(1,7)
		msg.post("randall#sprite", "play_animation", {id = hash("walking")})	
		go.animate("randall", "position.x", go.PLAYBACK_ONCE_FORWARD, item_table[r][1], go.EASING_LINEAR, 2)
		go.animate("randall", "position.y", go.PLAYBACK_ONCE_FORWARD, item_table[r][2], go.EASING_LINEAR, 2)
		local randall_behavior = timer.delay(1, false, function(self, id)
			msg.post("randall#sprite", "play_animation", {id = hash("idle")})	
		end)
		msg.post("gui#room_dialogue", "show_text", {number=r})
		msg.post(".", "non_idle")
	end
	
end

function final(self)
	goput.remove("petrock#sprite")
	goput.remove("ticket#sprite")
	goput.remove("shoe1#sprite")
	goput.remove("shoe2#sprite")
	goput.remove("coins#sprite")
end