local update_time = 0
local MOVE_AROUND_TIME = 15
local shoe_count = 0
local inside_gameobject = require "main.inside_gameobject"
local puzzle_sound = false
local room_url
local inv_arrow_url
local door_sound_url = nil
local books_context_url = nil
local drawer_url = nil
local bro_url = nil
local door_hint_timer = 0
local DOOR_HINT_DELAY = 4
local game_state = require("main.game_state")
local context_data = require("main.context_data")
local items = require("main.game.item.items")

local item_strings = {
	[1] = {
		text = "Would you look at that, Aries isn't aligned with Venus today either, Helena. Oops!",
		position = {x=210, y=200}
	},
	[2] = {
		text = "I don't care what anyone says, the books are much\nbetter than the TV Series. Suck it Game Of Thrones.",
		position = {x=220, y=260}
	},
	[3] = {
		text = "Oh no...Did I wet the bed again...?",
		position = {x=450, y=300}
	},
	[4] = {
		text = "That sure is a nice place for a poster. Hmm.",
		position = {x=800, y=280}
	},
	[5] = {
		text = "Wow, I really need to fill\nmy wall up with something.",
		position = {x=840, y=280}
	},
	[6] = {
		text = "I love stepping on my NES\ncontroller when no one is watching!",
		position = {x=600, y=200}
	},
	[7] = {
		text = "A weird Pepsi commercial is on screen.",
		position = {x=800, y=200}
	}
}


local update_context_entries
update_context_entries = function()
	context_data[hash("telescope")] = {
		{text="Inspect", click=function()
			msg.post("/dialogue#dialogue", "show_text", {text = "My telescope! Many nights spent looking\nat girl--stars. Yes, indeed.", character="randall"})
			update_time = 0
		end}
	}
	context_data[hash("drawer")] = {
		{text="Inspect", click=function()
			msg.post("/dialogue#dialogue", "show_text", {text = "I like to hide my change under my socks. It's rewarding to find a nickle between my toes every now and then!", character="randall"})
			update_time = 0
		end}
	}
	if not game_state.drawer_opened then
		table.insert(context_data[hash("drawer")], {text="Open", click=function(x, y)
			game_state.drawer_opened = true
			msg.post("/sound#6-drawer_opening", "play_sound")
			msg.post(drawer_url, "play_animation", {id = hash("open_drawer")})
			local item = items["coins"]
			item.status = "show"
			item.position.x = x
			item.position.y = y
			msg.post("/item_manager#item_manager", "update_visible_items")
			update_context_entries()
		end})
	end
	context_data[hash("room_door")] = {
		{text="Inspect", click=function()
			msg.post("/dialogue#dialogue", "show_text", {text = "Door to the outside.\nThe wild urban jungle. The big adventure.The great unknown.\n....My frontyard.", character="randall"})
			update_time = 0
		end},
		{text="Go Out", click=function(x, y)
			if door_hint_timer <= DOOR_HINT_DELAY then
				return
			end

			if game_state.in_gameplay and game_state.allowed_leave then
				msg.post("/collections#main", "load_screen", {
					name = "house_front",
					pos = vmath.vector3(222,211,0.4)
				})
				msg.post(door_sound_url, "play_sound")
				return
			end

			if not game_state.in_gameplay then
				return
			end

			if items.ticket.in_inventory then
				msg.post("/dialogue#dialogue", "show_text", {delay = 4, text="I need to put on my shoes before I leave...", character = "/randall", sound="#Randall_3"})
			else
				msg.post("/dialogue#dialogue", "show_text", {delay = 4, text="Not going anywhere without my ticket!", character = "/randall", sound="#Randall_1"})
			end
			door_hint_timer = 0
		end}
	}
	context_data[hash("nes")] = {
		{text="Inspect", click=function()
			msg.post("/dialogue#dialogue", "show_text", {text = "It's a Nintendo. \nTop of the line gaming technology!", character="randall"})
			update_time = 0
		end}
	}
	context_data[hash("tv")] = {
		{text="Inspect", click=function()
			msg.post("/dialogue#dialogue", "show_text", {text = "My TV. Yea, it's 480p. The future is here baby!", character="randall"})
			update_time = 0
		end}
	}
	context_data[hash("books")] = {
		{text="Inspect", click="I hope the Dark Tower series ends soon, I hate waiting!"},
		{text="Move",    click=function()
			msg.post(room_url, "show_ticket")
			items.ticket.movable = true
			game_state.ticket_moved = true
			go.delete(books_context_url)
		end}
	}
end

function update(self, dt)
	update_time = update_time + dt
	door_hint_timer = door_hint_timer + dt

	if update_time >= MOVE_AROUND_TIME then
		update_time = 0
		hint_count = hint_count + 1
		if hint_count < 3 then
			msg.post(".", "idle")
		else
			msg.post(".", "hint")
			hint_count = 0
		end
	end

	-- Puzzle solved (puzzle_solved so it only plays once)
	if items.ticket.in_inventory and game_state.both_shoes and not puzzle_sound and not game_state.allowed_leave then
		puzzle_sound = true
		game_state.allowed_leave = true
		msg.post("/sound#2-puzzle_solve", "play_sound")
		event_manager:register_event(2, function(self, id)
			msg.post(room_url, "run_sequence_2")
		end)
	end
end

function init(self)
	-- Run the intro cutscene
	if not game_state.intro_done then
		msg.post(".", "run_sequence_0")
	else
		msg.post(".", "moved")
	end
	inv_arrow_url = msg.url("inventory_arrow")
	msg.post(inv_arrow_url, "disable")
	msg.post("sound#ambiance", "play_sound")
	room_url = msg.url()
	door_sound_url = msg.url("sound#8-door_knob")
	drawer_url = msg.url("drawer#sprite")
	bro_url = msg.url("randall_bro")
	
	if items.ticket.found == 0 then
		msg.post("", "disable")
	end

	update_context_entries()
	if not game_state.ticket_moved then 
		items.ticket.movable = false
	end

	books_context_url = msg.url("books_clickable")
end

function final(self)
	msg.post("sound#ambiance", "stop_sound")
end

function on_input(self, action_id, action)
	--teste para ver se objetos aparecem no sítio na mudança de cenários
	if action_id == hash("m") then
		msg.post("/collections#main", "load_screen", {
			name = "house_front",
			pos = vmath.vector3(422,311,0.4)
		})
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("run_sequence_0") then
		msg.post("/collections#main", "stop_game")
		msg.post("/cutscene#cutscene", "cutscene_start")
		msg.post("/randall#sprite", "play_animation", {id = hash("bed_sleeping")})
		event_manager:register_event(3, function(self, id)
			msg.post("/dialogue#dialogue", "show_text", {delay=5, text="Randall, wake up!! \nYou're gonna be late for school!", character = bro_url, sound="#Bullies_4", skip=true})
			msg.post("/randall#sprite", "play_animation", {id = hash("bed_awake")})
		end)
		event_manager:register_event(5, function(self, id)
			msg.post("/dialogue#dialogue", "show_text", {delay=5, text="It's saturday! I'm not falling \nfor that again Travis!", sound="#Randall_1", skip=true})
			msg.post("/randall#sprite", "play_animation", {id = hash("bed_talking")})
		end)

		event_manager:register_event(5, function(self, id)
			msg.post("/dialogue#dialogue", "show_text", {delay=2.5, text="Whatever turd!", character = bro_url, sound="#Bullies_2", skip=true})
			msg.post("/randall#sprite", "play_animation", {id = hash("bed_awake")})
		end)

		event_manager:register_event(2.5, function(self, id)
			msg.post("/dialogue#dialogue", "show_text", {delay=4, text="Sigh...\nHe's such a douche...", sound="#Randall_short2", skip=true})
			msg.post("/randall#sprite", "play_animation", {id = hash("bed_talking")})
		end)

		event_manager:register_event(3, function()
			msg.post("/randall#sprite", "play_animation", {id = hash("bed_awake")})
		end)

		event_manager:register_event(2, function(self, id)
			msg.post("/dialogue#dialogue", "show_text", {delay=1.5, text="Oh no!", sound="#Randall_panic1", skip=true})
			msg.post("/randall#sprite", "play_animation", {id = hash("bed_talking")})
		end)

		event_manager:register_event(1.5, function(self, id)
			msg.post("/dialogue#dialogue", "show_text", {delay=5, text="I'm gonna be late for the anual \nSorcery: The congregation anual tournament!", skip=true})
		end)

		event_manager:register_event(5, function(self, id)
			msg.post("/dialogue#dialogue", "show_text", {delay=5, text="Gotta find my shoes before I leave...\nAnd my ticket!", sound="#Randall_4"})
		end)

		local transition = msg.url("transition")
		event_manager:register_event(4.5, function(self, id)
			msg.post(transition, "play_transition")
		end)

		event_manager:register_event(1.25, function(self, id)
			msg.post(room_url, "run_sequence_1")
		end)

	elseif message_id == hash("run_sequence_1") then
		go.set_position(vmath.vector3(520,300,go.get_position("/randall").z), "/randall")
		msg.post("/randall#sprite", "play_animation", {id = hash("idle")})
		msg.post("/collections#main", "stop_game")
		event_manager:register_event(3, function(self, id)
			msg.post(room_url, "acquire_input_focus")
			msg.post("/collections#main", "restart_game")
			msg.post("/cutscene#cutscene", "cutscene_end")
		end)
		game_state.intro_done = true
		game_state.in_gameplay = true
	elseif message_id == hash("idle") then
		if game_state.in_gameplay then
			local r = math.random(1, #item_strings)
			msg.post("/randall", "go_to", {
				pos=vmath.vector3(item_strings[r].position.x, item_strings[r].position.y, 0.2),
				duration=2
			})
			msg.post("/dialogue#dialogue", "show_text", {text=item_strings[r].text, character="/randall", sound="#Randall_3"})
		end

	elseif message_id == hash("hint") then
		if game_state.in_gameplay and not game_state.both_shoes then
			if items.ticket.in_inventory then
				msg.post("/dialogue#dialogue", "show_text", {delay=5, text = "Boy, I sure wish my shoes \nmagically flew towards me!", character = "/randall", sound="#Randall_4"})
			else
				msg.post("/dialogue#dialogue", "show_text", {delay=6, text = "Pretty sure I was using my ticket as a\nbookmark last night... I need to find it.", character = "/randall", sound="#Randall_3"})
			end
		end
		if items.ticket.in_inventory and game_state.both_shoes then
			msg.post("/dialogue#dialogue", "show_text", {text = "I really need to go now.\n I'm gonna be late!", character = "/randall", sound="#Randall_1"})
		end
		msg.post(".", "moved")

	elseif message_id == hash("shoe_found") and shoe_count < 2 then
		local randall_pos = go.get_position("/randall")
		if not game_state.both_shoes and inside_gameobject(msg.url("/randall#sprite"), message.x, message.y) then
			shoe_count = shoe_count + 1
			msg.post("/item_manager#item_manager", "destroy_item",{text = message.item_name})
			if shoe_count == 1 then
				msg.post("/dialogue#dialogue", "show_text", {text="That's one shoe!", character = "/randall", sound="#Randall_short1"})
			end
			if shoe_count == 2 then
				msg.post("/dialogue#dialogue", "show_text", {text="Aaaand ready to go!", character = "/randall", sound="#Randall_short2"})
				game_state.both_shoes = true
			end
		end
		msg.post(".", "moved")

	elseif message_id == hash("find_shoes") then
		event_manager:register_event(4, function(self, id)
			msg.post("/dialogue#dialogue", "show_text", {text="Ok, gotta find my shoes now...", character = "/randall", sound="#Randall_6"})
		end)
		msg.post(".", "moved")

	elseif message_id == hash("find_ticket") then
		event_manager:register_event(4, function(self, id)
			msg.post("/dialogue#dialogue", "show_text", {text="Now, the ticket has to be somewhere...", character = "/randall", sound="#Randall_6"})
		end)
		msg.post(".", "moved")

	elseif message_id == hash("ticket_found") and not items.ticket.in_inventory then
		msg.post("/dialogue#dialogue", "show_text", {delay=3.5, text="All safe for later!", character = "/randall", sound="#Randall_5"})

	elseif message_id == hash("run_sequence_2") then
		event_manager:register_event(1, function(self, id)
			msg.post("/dialogue#dialogue", "show_text", {delay = 4, text="Alright! Time to bounce out of here!", character = "/randall", sound="#Randall_1"})
		end)
		event_manager:register_event(4, function(self, id)
			msg.post(room_url, "acquire_input_focus")
		end)
	end

	if message_id == hash("moved") then
		update_time = 0
	end

	if message_id == hash("show_ticket") then
		go.animate("books", "position", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(252,212,0.1), go.EASING_LINEAR, 0.4)
		go.animate("books", "rotation", go.PLAYBACK_ONCE_FORWARD, vmath.quat_rotation_z(math.rad(-90)), go.EASING_LINEAR, 0.4, 0, function(self, url, property)
			msg.post("sound#7-books_falling", "play_sound")
			if not game_state.ticket_moved then
				msg.post("/dialogue#dialogue", "show_text", {delay = 4, text="There's the ticket! \nNow, where to put it...", character = "/randall", sound="#Randall_4"})
				timer.delay(4, false, function(self, id)
					msg.post("/dialogue#dialogue", "show_text", {delay = 2, text="Oh.", character = "/randall"})
				end)
			end
		end)
	end

	if message_id == hash("cant_leave") then
		if door_hint_timer > DOOR_HINT_DELAY then
			if game_state.in_gameplay and not game_state.got_shoes then
				if items.ticket.in_inventory then
					msg.post("/dialogue#dialogue", "show_text", {delay = 4, text="I need to put on my shoes before I leave...", character = "/randall", sound="#Randall_3"})
				else
					msg.post("/dialogue#dialogue", "show_text", {delay = 4, text="I have to find my ticket before I leave!", character = "/randall", sound="#Randall_1"})
				end
				door_hint_timer = 0
			end
		end
	end

	if message_id == hash("inventory_arrow") then
		if not game_state.first_item_picked then
			game_state.first_item_picked = true

			timer.delay(2, false, function(self, id)
				msg.post(inv_arrow_url, "enable")
			end)
			timer.delay(2.5, false, function(self, id)
				msg.post(inv_arrow_url, "disable")
			end)
			timer.delay(2.8, false, function(self, id)
				msg.post(inv_arrow_url, "enable")
			end)
			timer.delay(3.3, false, function(self, id)
				msg.post(inv_arrow_url, "disable")
			end)
			timer.delay(3.6, false, function(self, id)
				msg.post(inv_arrow_url, "enable")
			end)
			timer.delay(4, false, function(self, id)
				msg.post(inv_arrow_url, "disable")
			end)
		end
	end
end
