local goput = require "main.clickinput"
local gamestate = 0
local update_time = 0
local MOVE_AROUND_TIME = 15

local item_strings = {
	[1] = {
		text = "I haven't spied on anyo-I MEAN - I haven't stargazed in a while.",
		position = {x=210, y=200}
	},
	[2] = {
		text = "books",
		position = {x=220, y=260}
	},
	[3] = {
		text = "bed",
		position = {x=450, y=300}
	},
	[4] = {
		text = "poster 1",
		position = {x=800, y=280}
	},
	[5] = {
		text = "poster 2",
		position = {x=840, y=280}
	},
	[6] = {
		text = "nes",
		position = {x=600, y=200}
	},
	[7] = {
		text = "tv",
		position = {x=800, y=200}
	}
}

local int_strings = {
	petrock = {
		text = "Nearly forgot my pet rock!",
		position = {x=900, y=250}
	},
	coins = {
		text = "Found coins!",
		position = {x=680, y=280}
	},
	ticket = {
		text = "That's where it was!",
		position = {x=300, y=280}
	},
	shoe1 = {
		text = "Ah there's one...",
		position = {x=300, y=180}
	},
	shoe2 = {
		text = "Found a shoe!",
		position = {x=800, y=280}
	}
}

function update(self, dt)
	update_time = update_time + dt
	if update_time >= MOVE_AROUND_TIME then
		update_time = 0
		msg.post(".", "idle")
	end
end

local function handle_click(url, action_id, action, gameobject)

	if action.released then
		local item = int_strings[gameobject]
		
		update_time = 0
		msg.post("/dialogue#dialogue", "show_text", {text=item.text, delay=4})
		local randall_behavior = timer.delay(3, false, function(self, id)
			go.animate("randall", "position.x", go.PLAYBACK_ONCE_FORWARD, item.position.x, go.EASING_LINEAR, 1.2)
			go.animate("randall", "position.y", go.PLAYBACK_ONCE_FORWARD, item.position.y, go.EASING_LINEAR, 1.2)
			local randall_behavior = timer.delay(1, false, function(self, id)
				msg.post("randall#sprite", "play_animation", {id = hash("idle")})	
			end)
			
			go.animate(url, "position.y", go.PLAYBACK_ONCE_FORWARD, -50, go.EASING_LINEAR, 1)
			go.animate(url, "position.x", go.PLAYBACK_ONCE_FORWARD, 300, go.EASING_LINEAR, 1)
		end)
	end
end

function init(self)
	for name, item in pairs(int_strings) do
		goput.add(name.."#sprite", nil, handle_click, name)
	end
	msg.post(".", "run_sequence_1")
end

function on_input(self, action_id, action)
	gamestate = 0 
	return goput.on_input(action_id, action, gameobject)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("run_sequence_1") then		
		local pos = vmath.vector3(0,-20,0)
		local rot = vmath.quat_rotation_z(90)
		go.animate("randall", "rotation.z", go.PLAYBACK_ONCE_FORWARD, 0, go.EASING_LINEAR, 1)
		go.animate("randall", "position.y", go.PLAYBACK_ONCE_FORWARD, 300, go.EASING_LINEAR, 1)
		go.animate("randall", "position.x", go.PLAYBACK_ONCE_FORWARD, 520, go.EASING_LINEAR, 1)
		timer.delay(2, false, function(self, id)
			msg.post(".", "acquire_input_focus")
		end)
	elseif message_id == hash("idle") then
		math.random(); math.random(); math.random()
		local r = math.random(1,#item_strings)
		msg.post("randall#sprite", "play_animation", {id = hash("walking")})	
		go.animate("randall", "position.x", go.PLAYBACK_ONCE_FORWARD, item_strings[r].position.x, go.EASING_LINEAR, 2)
		go.animate("randall", "position.y", go.PLAYBACK_ONCE_FORWARD, item_strings[r].position.y, go.EASING_LINEAR, 2)
		local randall_behavior = timer.delay(1, false, function(self, id)
			msg.post("randall#sprite", "play_animation", {id = hash("idle")})	
		end)
		msg.post("/dialogue#dialogue", "show_text", {text=item_strings[r].text})
	end
	
end

function final(self)
	for name, item in pairs(int_strings) do
		goput.remove(name.."#sprite")
	end
end